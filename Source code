from django.shortcuts import render
from django.template import RequestContext from django.contrib import messages
import pymysql
from django.http import HttpResponse from django.conf import settings
from django.core.files.storage import FileSystemStorage import matplotlib.pyplot as plt
import re import cv2
import numpy as np
from string import punctuation from nltk.corpus import stopwords import nltk
from nltk.stem import WordNetLemmatizer from nltk.stem import PorterStemmer import os
from nltk.tokenize import word_tokenize
	
stop_words = set(stopwords.words('english')) lemmatizer = WordNetLemmatizer()
porter = PorterStemmer()

def LCS(l1,l2): #LCS method 
  s1 = word_tokenize(l1)
  s2 = word_tokenize(l2)
  dp = [[None]*(len(s1)+1) for i in range(len(s2)+1)] 
  for i in range(len(s2)+1):
    for j in range(len(s1)+1): 
      if i == 0 or j == 0:
        dp[i][j] = 0
      elif s2[i-1] == s1[j-1]: 
        dp[i][j] = dp[i-1][j-1]+1
      else:
        dp[i][j] = max(dp[i-1][j] , dp[i][j-1]) 
return dp[len(s2)][len(s1)]

def cleanPost(doc): 
  tokens = doc.split()
  table = str.maketrans('', '', punctuation) 
  tokens = [w.translate(table) for w in tokens]
  tokens = [word for word in tokens if word.isalpha()] 
  tokens = [w for w in tokens if not w in stop_words]
 
  tokens = [word for word in tokens if len(word) > 1]
  tokens = [lemmatizer.lemmatize(token) for token in tokens] tokens = [porter.stem(token) for token in tokens]
  tokens = ' '.join(tokens) return tokens


text_files = [] 
text_data = [] 
image_files = [] 
image_data = []

def index(request):
  if request.method == 'GET':
    return render(request, 'index.html', {})

def Register(request):
  if request.method == 'GET':
    return render(request, 'Register.html', {})

def Login(request):
  if request.method == 'GET':
    return render(request, 'Login.html', {})

def UploadSuspiciousFile(request): 
  if request.method == 'GET':
    return render(request, 'UploadSuspiciousFile.html', {})

def UploadSuspiciousImage(request): 
  if request.method == 'GET':
    return render(request, 'UploadSuspiciousImage.html', {})

def UserLogin(request):
  if request.method == 'POST':
    username = request.POST.get('username', False) 
    password = request.POST.get('password', False) 
    index = 0
    con = pymysql.connect(host='127.0.0.1',port = 3308,user = 'root', password = 'root', database = 'plagiarism',charset='utf8')
    with con:
      cur = con.cursor() cur.execute("select * FROM users") 
      rows = cur.fetchall()
      for row in rows:
 
        if row[0] == username and password == row[1]:
          index = 1 
          break
    if index == 1:
      file = open('session.txt','w') 
      file.write(username) 
      file.close()
      context= {'data':'welcome '+username}
      return render(request, 'UserScreen.html', context) 
  else:
    context= {'data':'login failed'}
    return render(request, 'Login.html', context)

def Signup(request):
  if request.method == 'POST':
    username = request.POST.get('username', False) 
    password = request.POST.get('password', False) 
    contact = request.POST.get('contact', False) 
    email = request.POST.get('email', False)
    address = request.POST.get('address', False)
    db_connection = pymysql.connect(host='127.0.0.1',port = 3308,user = 'root', password = 'root', database = 'plagiarism',charset='utf8')
    db_cursor = db_connection.cursor() student_sql_query = "INSERT INTO
users(username,password,contact_no,email,address) 
VALUES('"+username+"','"+password+"','"+contact+"','"+email+"','"+address+"')"
  db_cursor.execute(student_sql_query) 
  db_connection.commit() print(db_cursor.rowcount, "Record Inserted") if db_cursor.rowcount == 1:
  context= {'data':'Signup Process Completed'} 
  return render(request, 'Register.html', context) 
  else:
  context= {'data':'Error in signup process'} 
  return render(request, 'Register.html', context)
